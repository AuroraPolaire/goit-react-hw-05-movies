{"version":3,"file":"static/js/779.10d1514f.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/servises/movieAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsContainer = styled.div`\n\n display: flex;\n align-items: center;\n gap: 10px;\n padding: 5px 10px;\n border-top: 1px solid black;\n\n & .name {\n    text-align: center;\n    flex-grow: 1;\n    min-width: 200px;\n   \n}\n\n& h3 {\n    font-size: 20px;\n    word-break: break-all;\n}\n\n& img {\n    max-width: 80px;\n    border-radius: 50%;\n    display: block;\n    margin: 0 auto;\n}\n\n& .read-or-hide{\n\n  color: rgb(192,192,192);\n  cursor: pointer;\n}\n\n`","import { useParams } from \"react-router-dom\";\nimport {useState, useEffect, useRef} from 'react';\nimport {getMovieReviews} from '../servises/movieAPI';\nimport img from '../../images/no-image-icon.png';\nimport {ReviewsContainer} from './Reviews.styled';\nimport { ThreeDots } from 'react-loader-spinner';\n\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews]= useState([]);\n    const [loading, setLoading] = useState(false);\n    const [isReadMore, setIsReadMore] = useState(true);\n    const refDiv = useRef('');\n\n    const toggleReadMore = () => {\n        setIsReadMore(!isReadMore);\n      };\n\n    useEffect(()=> {\n        setLoading(true);\n        try {\n            const fetchReviews = async (id) => {\n                const result = await getMovieReviews(id);\n                setReviews(result.results);\n\n                if (result.results.length === 0) {\n                    refDiv.current.textContent = 'There are no reviews available';\n                    return;\n                }\n            }  \n            fetchReviews(id);\n        } catch (error) {\n            console.log(error);\n        } finally {setLoading(false)}\n        \n        \n    }, [id]);\n\n\n   return (\n    <>\n    \n    {loading === false ? reviews.map(({author, content, author_details : {avatar_path}}) => \n    \n        <ReviewsContainer key={author}>\n        <div className=\"name\">\n            <h3>{author}</h3>\n            <img src={avatar_path !== null ? (!avatar_path.includes('http') ? `https://image.tmdb.org/t/p/w500/${avatar_path}` : avatar_path.slice(1, avatar_path.length )) : img } alt={author} ></img>\n        </div>\n        <div>\n        {isReadMore ? content.slice(0, 400)  : content}\n      <span onClick={toggleReadMore} className=\"read-or-hide\">\n        {isReadMore ? \".....read more\" : \"Show less\"}\n      </span>\n      </div>\n     </ReviewsContainer>\n   \n    ): <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"blue\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"loader\"\n    visible={true}\n  /> }\n  {reviews.length === 0 ? <div ref={refDiv}></div> : null}\n    </>)\n}\n\n\n\nexport default Reviews","import axios from \"axios\";\n\n\nexport const movieAPI = async (page) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n}\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/movie/week?page=${page}`, {params});\n\n    return data;\n\n}\n\nexport const getMovieByID = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n     const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {params});\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, {params});\n    return data.cast;\n}\n\n\nexport const getMovieReviews = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, {params});\n    return data;\n}\n\nexport const getMovieQuery = async (query, page) => {\n    const params = {\n        'query': query,\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     } \n\n     const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?page=${page}`, {params});\n     return data;\n}\n"],"names":["ReviewsContainer","styled","id","useParams","useState","reviews","setReviews","loading","setLoading","isReadMore","setIsReadMore","refDiv","useRef","toggleReadMore","useEffect","fetchReviews","getMovieReviews","result","results","length","current","textContent","error","console","log","map","author","content","avatar_path","author_details","className","src","includes","slice","img","alt","onClick","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","ref","movieAPI","page","params","api_key","axios","data","getMovieByID","getMovieCredits","cast","getMovieQuery","query"],"sourceRoot":""}