{"version":3,"file":"static/js/779.fa4fd866.chunk.js","mappings":"0QAEaA,E,OAAmBC,GAAAA,IAAH,kY,SCoC7B,EA/BgB,WACZ,OAA6BC,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYT,OAVCE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,WAAOH,GAAP,wFACII,EAAAA,EAAAA,IAAgBJ,GADpB,OACXK,EADW,OAEjBN,EAAWM,EAAOC,SAFD,2CAAH,sDAKlBH,EAAaH,EAChB,GAAE,CAACA,KAIJ,8BACoB,IAAnBF,EAAQS,OAAeT,EAAQU,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAA2BC,EAArC,EAAmBC,eAAkBD,YAArC,OAChC,UAAChB,EAAD,YACA,iBAAKkB,UAAU,OAAf,WACI,wBAAKJ,KACL,gBAAKK,IAAqB,OAAhBH,EAAyBA,EAAYI,SAAS,QAA6DJ,EAAYK,MAAM,EAAGL,EAAYJ,QAApH,0CAAmEI,GAA6DM,EAAMC,IAAKT,QAGjL,gBAAKI,UAAU,UAAf,UAAyB,uBAAIH,QANND,EADS,KASjC,6DAEN,C,+LC/BYU,EAAQ,mCAAG,WAAOC,GAAP,kFACdC,EAAS,CACXC,QAAS,oCAFO,SAKCC,EAAAA,EAAAA,IAAA,gEAAmEH,GAAQ,CAACC,OAAAA,IAL7E,uBAKbG,EALa,EAKbA,KALa,kBAObA,GAPa,2CAAH,sDAWRC,EAAY,mCAAG,WAAOzB,GAAP,kFAClBqB,EAAS,CACXC,QAAS,oCAFW,SAIFC,EAAAA,EAAAA,IAAA,6CAAgDvB,GAAM,CAACqB,OAAAA,IAJrD,uBAIhBG,EAJgB,EAIhBA,KAJgB,kBAKjBA,GALiB,2CAAH,sDAQZE,EAAe,mCAAG,WAAO1B,GAAP,kFACrBqB,EAAS,CACXC,QAAS,oCAFc,SAINC,EAAAA,EAAAA,IAAA,6CAAgDvB,EAAhD,YAA8D,CAACqB,OAAAA,IAJzD,uBAIpBG,EAJoB,EAIpBA,KAJoB,kBAKpBA,EAAKG,MALe,2CAAH,sDASfvB,EAAe,mCAAG,WAAOJ,GAAP,kFACrBqB,EAAS,CACXC,QAAS,oCAFc,SAINC,EAAAA,EAAAA,IAAA,6CAAgDvB,EAAhD,YAA8D,CAACqB,OAAAA,IAJzD,uBAIpBG,EAJoB,EAIpBA,KAJoB,kBAKpBA,GALoB,2CAAH,sDAQfI,EAAa,mCAAG,WAAOC,EAAOT,GAAd,kFACnBC,EAAS,CACX,MAASQ,EACTP,QAAS,oCAHY,SAMHC,EAAAA,EAAAA,IAAA,yDAA4DH,GAAQ,CAACC,OAAAA,IANlE,uBAMjBG,EANiB,EAMjBA,KANiB,kBAOjBA,GAPiB,2CAAH,uD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/servises/movieAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsContainer = styled.div`\n display: flex;\n align-items: center;\n gap: 10px;\n padding: 5px 10px;\n border-top: 1px solid black;\n\n & .name {\n    text-align: center;\n    flex-grow: 1;\n    min-width: 200px;\n   \n}\n\n& h3 {\n    font-size: 20px;\n    word-break: break-all;\n}\n\n& img {\n    max-width: 80px;\n    border-radius: 50%;\n    display: block;\n    margin: 0 auto;\n}\n\n`","import { useParams } from \"react-router-dom\";\nimport {useState, useEffect} from 'react';\nimport {getMovieReviews} from '../servises/movieAPI';\nimport img from '../../images/no-image-icon.png';\nimport {ReviewsContainer} from './Reviews.styled'\n\n\nconst Reviews = () => {\n    const [reviews, setReviews]= useState([]);\n    const { id } = useParams();\n\n    useEffect(()=> {\n        const fetchReviews = async (id) => {\n            const result = await getMovieReviews(id);\n            setReviews(result.results);\n\n        }\n        fetchReviews(id);\n    }, [id]);\n\n\n   return (\n    <>\n    {reviews.length !== 0 ? reviews.map(({author, content, author_details : {avatar_path}}) => \n        <ReviewsContainer key={author}>\n        <div className=\"name\">\n            <h3>{author}</h3>\n            <img src={avatar_path !== null ? (!avatar_path.includes('http') ? `https://image.tmdb.org/t/p/w500/${avatar_path}` : avatar_path.slice(1, avatar_path.length )) : img } alt={author} ></img>\n        </div>\n           \n        <div className=\"content\"><p>{content}</p></div>\n        </ReviewsContainer>\n    ): <div>There are no reviews available</div>}\n    </>)\n}\n\n\n\nexport default Reviews","import axios from \"axios\";\n\n\nexport const movieAPI = async (page) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n}\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/movie/week?page=${page}`, {params});\n\n    return data;\n\n}\n\nexport const getMovieByID = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n     const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {params});\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, {params});\n    return data.cast;\n}\n\n\nexport const getMovieReviews = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, {params});\n    return data;\n}\n\nexport const getMovieQuery = async (query, page) => {\n    const params = {\n        'query': query,\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     } \n\n     const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?page=${page}`, {params});\n     return data;\n}\n"],"names":["ReviewsContainer","styled","useState","reviews","setReviews","id","useParams","useEffect","fetchReviews","getMovieReviews","result","results","length","map","author","content","avatar_path","author_details","className","src","includes","slice","img","alt","movieAPI","page","params","api_key","axios","data","getMovieByID","getMovieCredits","cast","getMovieQuery","query"],"sourceRoot":""}