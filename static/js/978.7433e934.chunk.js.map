{"version":3,"file":"static/js/978.7433e934.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/servises/movieAPI.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\n\nexport const StyledButton = styled.button`\n    margin: 15px 50px;\n    padding: 5px 10px;\n    border: none;\n    border-radius: 3px;\n    transition: 0.3s;\n \n\n &:hover {\n    background-color: #0d6efd; \n    \n }\n`\n\nexport const StyledContainer = styled.div`\ndisplay: flex;\ngap: 20px;\npadding: 0 20px;\n\n& img {\n max-width: 200px;\n}\n& h1 {\n    margin: 0;\n}\n\n& h2 {\n    font-size: 20px;\n}\n\n\n\n`\n\nexport const StyledAdditional = styled.div`\npadding: 0 20px;\n& h2 {\n    font-size: 20px;\n}\n\n& .additional:not(:last-child) {\n    padding-bottom: 10px ;\n}\n\n& .additional {\n\n}\n`\n\nexport const StyledLink = styled(NavLink)`\n  color: black;\n\n  &:hover {\n    border-bottom: 3px solid #0d6efd; \n  }\n\n&.active {\n  color: #0d6efd;\n}`\n\n","import { useParams, useLocation, Link, Outlet } from \"react-router-dom\";\nimport React, {useState, useEffect} from 'react';\nimport {getMovieByID} from '../servises/movieAPI';\nimport { StyledButton, StyledContainer, StyledAdditional, StyledLink } from \"./MovieCard.styled\";\n// import img from '../../images/no-image-icon.png';\n\n\n\nconst MovieCard = () => {\n    const [movie, setMovie] = useState({});\n    const [genre, setGenre] = useState([]);\n    const [poster, setPoster] = useState('')\n    const { id } = useParams();\n    const location = useLocation();\n    const backLink = location.state?.from ?? \"/\";\n\n  \n    useEffect(()=> {\n        const fetchMovie = async (id) => {\n            const result = await getMovieByID(id);\n  \n            setMovie(result);\n            setGenre(result.genres)\n            setPoster(`https://image.tmdb.org/t/p/w300/${result.poster_path}`)\n        }\n        fetchMovie(id);\n    }, [id])\n\n    const genreList =  (genre) => {\n        if(!genre){ return;}\n        const list = genre.map(genre => genre.name)\n        return list.join(' ');\n    }\n  return (\n    <>\n    <Link to={backLink}><StyledButton type=\"button\">Go back</StyledButton></Link>\n    <StyledContainer>\n        <div>\n            {poster !== '' ? <img src={poster} alt=\"\"></img> : <div>Loading ...</div>}\n        </div>\n        <div>\n            <h1>{movie.original_title} ({parseFloat(movie.release_date)})</h1>\n            <p>User score: {movie.vote_average * 10}&#37;</p>\n            <h2>Overview</h2>\n            <p>{movie.overview}</p>\n            <h2>Genres</h2>\n            <p>{genreList(genre)}</p>\n\n        </div>\n    </StyledContainer>\n    <StyledAdditional>\n        <h2>Additional information</h2>\n        <ul >\n            <li className=\"additional\"><StyledLink to=\"cast\">Cast</StyledLink></li>\n            <li className=\"additional\"><StyledLink to=\"reviews\">Reviews</StyledLink></li>\n        </ul>\n    </StyledAdditional>\n    <Outlet />\n\n   </>)\n}\n\n\nexport default MovieCard;","import axios from \"axios\";\n\n\nexport const movieAPI = async (page) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n}\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/movie/week?page=${page}`, {params});\n\n    return data;\n\n}\n\nexport const getMovieByID = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n     const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {params});\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, {params});\n    return data.cast;\n}\n\n\nexport const getMovieReviews = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, {params});\n    return data;\n}\n\nexport const getMovieQuery = async (query, page) => {\n    const params = {\n        'query': query,\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     } \n\n     const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?page=${page}`, {params});\n     return data;\n}\n"],"names":["StyledButton","styled","StyledContainer","StyledAdditional","StyledLink","NavLink","useState","movie","setMovie","genre","setGenre","poster","setPoster","id","useParams","backLink","useLocation","state","from","useEffect","fetchMovie","getMovieByID","result","genres","poster_path","to","type","src","alt","original_title","parseFloat","release_date","vote_average","overview","map","name","join","genreList","className","movieAPI","page","params","api_key","axios","data","getMovieCredits","cast","getMovieReviews","getMovieQuery","query"],"sourceRoot":""}